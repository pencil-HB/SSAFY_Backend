/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-09-26 02:05:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.ssafy.member.model.MemberDto;
import com.ssafy.member.model.MemberDto;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/confirm.jsp", Long.valueOf(1727310458032L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.ssafy.member.model.MemberDto");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(' ');
      out.write('\r');
      out.write('\n');

String root = request.getContextPath();

MemberDto memberDto = null;

Cookie[] cookies = request.getCookies();
String checked = "";
String saveId = "";

if(cookies != null){
	for(Cookie c : cookies) {
		if(c.getName().equals("SSAFY_ID")){
			saveId = c.getValue();
			checked = "checked";
			break;
		}
	}
}


      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <link\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    />\r\n");
      out.write("    <link href=\"");
      out.print( root );
      out.write("/assets/css/app.css\" rel=\"stylesheet\" />\r\n");
      out.write("    <title>SSAFY</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");

if(memberDto == null) {

      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <div class=\"row justify-content-center\">\r\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\r\n");
      out.write("          <h2 class=\"my-3 py-3 shadow-sm bg-light text-center\">\r\n");
      out.write("            <mark class=\"orange\">로그인</mark>\r\n");
      out.write("          </h2>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\r\n");
      out.write("          <form id=\"form-login\" method=\"POST\" action=\"\">\r\n");
      out.write("            <input type=\"hidden\" name=\"action\" value=\"login\" />\r\n");
      out.write("            <div class=\"form-check mb-3 float-end\">\r\n");
      out.write("              <input\r\n");
      out.write("                class=\"form-check-input\"\r\n");
      out.write("                type=\"checkbox\"\r\n");
      out.write("                value=\"ok\"\r\n");
      out.write("                id=\"saveid\"\r\n");
      out.write("                name=\"saveid\"\r\n");
      out.write("                ");
      out.print( checked );
      out.write("\r\n");
      out.write("              />\r\n");
      out.write("              <label class=\"form-check-label\" for=\"saveid\"> 아이디저장 </label>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("              <label for=\"userid\" class=\"form-label\">아이디 : </label>\r\n");
      out.write("              <input\r\n");
      out.write("                type=\"text\"\r\n");
      out.write("                class=\"form-control\"\r\n");
      out.write("                id=\"userid\"\r\n");
      out.write("                name=\"userid\"\r\n");
      out.write("                placeholder=\"아이디...\"\r\n");
      out.write("                value=\"");
      out.print( saveId );
      out.write("\"\r\n");
      out.write("              />\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"mb-3\">\r\n");
      out.write("              <label for=\"userpwd\" class=\"form-label\">비밀번호 : </label>\r\n");
      out.write("              <input\r\n");
      out.write("                type=\"password\"\r\n");
      out.write("                class=\"form-control\"\r\n");
      out.write("                id=\"userpwd\"\r\n");
      out.write("                name=\"userpwd\"\r\n");
      out.write("                placeholder=\"비밀번호...\"\r\n");
      out.write("              />\r\n");
      out.write("            </div>\r\n");

	String msg = (String) request.getAttribute("msg");

      out.write("\r\n");
      out.write("            <div class=\"text-danger mb-2\">");
      out.print( msg != null ? msg : "" );
      out.write("</div>\r\n");
      out.write("            <div class=\"col-auto text-center\">\r\n");
      out.write("              <button type=\"button\" id=\"btn-login\" class=\"btn btn-outline-primary mb-3\">\r\n");
      out.write("                로그인\r\n");
      out.write("              </button>\r\n");
      out.write("              <button type=\"button\" id=\"btn-mv-join\" class=\"btn btn-outline-success mb-3\">\r\n");
      out.write("                회원가입\r\n");
      out.write("              </button>\r\n");
      out.write("            </div>\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("      integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    ></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      document.querySelector(\"#btn-mv-join\").addEventListener(\"click\", function () {\r\n");
      out.write("    	location.href = \"");
      out.print( root );
      out.write("/user?action=mvjoin\";\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      document.querySelector(\"#btn-login\").addEventListener(\"click\", function () {\r\n");
      out.write("        if (!document.querySelector(\"#userid\").value) {\r\n");
      out.write("          alert(\"아이디 입력!!\");\r\n");
      out.write("          return;\r\n");
      out.write("        } else if (!document.querySelector(\"#userpwd\").value) {\r\n");
      out.write("          alert(\"비밀번호 입력!!\");\r\n");
      out.write("          return;\r\n");
      out.write("        } else {\r\n");
      out.write("          let form = document.querySelector(\"#form-login\");\r\n");
      out.write("          form.setAttribute(\"action\", \"");
      out.print( root );
      out.write("/user\");\r\n");
      out.write("          form.submit();\r\n");
      out.write("        }\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");

} else {

      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("	  <!-- 로그인 사용자 정보(로그아웃) 출력 -->\r\n");
      out.write("	  ");
      out.write('\r');
      out.write('\n');

MemberDto userInfo = (MemberDto) session.getAttribute("userinfo");

if(userInfo != null) {

      out.write("\r\n");
      out.write("	<div class=\"row justify-content-center\">\r\n");
      out.write("	  <div class=\"col-lg-8 col-md-10 col-sm-12 m-3 text-end\">\r\n");
      out.write("		<strong>");
      out.print( userInfo.getUserName() );
      out.write("</strong> (");
      out.print( userInfo.getUserId() );
      out.write(")님 안녕하세요.\r\n");
      out.write("		<a href=\"");
      out.print( root );
      out.write("/user?action=logout\">로그아웃</a><br />\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");

} else {

      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	alert(\"로그인이 필요한 페이지입니다.\");\r\n");
      out.write("	location.href = \"");
      out.print( root );
      out.write("/user?action=mvlogin\";\r\n");
      out.write("	</script>\r\n");
	
}

      out.write("\r\n");
      out.write("      <div class=\"row justify-content-center\">\r\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\r\n");
      out.write("          <h2 class=\"my-3 py-3 shadow-sm bg-light text-center\">\r\n");
      out.write("            <mark class=\"orange\">SSAFY 게시판 - MVC Pattern (with Session &amp; Cookie)</mark>\r\n");
      out.write("          </h2>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12 text-center\">\r\n");
      out.write("          <a href=\"");
      out.print( root );
      out.write("/article?action=mvwrite\">글쓰기</a><br />\r\n");
      out.write("          <a href=\"");
      out.print( root );
      out.write("/article?action=list&pgno=1&key=&word=\">글목록</a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");

}

      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
