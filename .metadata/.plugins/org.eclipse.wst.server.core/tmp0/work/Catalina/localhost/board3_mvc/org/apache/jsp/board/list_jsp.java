/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.30
 * Generated at: 2024-09-25 01:09:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import com.ssafy.board.model.BoardDto;
import com.ssafy.board.model.dao.BoardDaoImpl;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.ssafy.board.model.dao.BoardDaoImpl");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.ssafy.board.model.BoardDto");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

String root = request.getContextPath();

//1. DB에서 글목록을 Dao의 listArticle()메소드를 이용하여 select하여 List로 얻어오세요.
List<BoardDto> list = BoardDaoImpl.getBoardDao().listArticle();

//2. 1에서 얻어온 List의 갯수만큼 <tr>을 이용하여 출력하세요.

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <link\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    />\r\n");
      out.write("    <link href=\"");
      out.print( root );
      out.write("/assets/css/app.css\" rel=\"stylesheet\" />\r\n");
      out.write("    <title>SSAFY</title>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <div class=\"row justify-content-center\">\r\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\r\n");
      out.write("          <h2 class=\"my-3 py-3 shadow-sm bg-light text-center\">\r\n");
      out.write("            <mark class=\"sky\">글목록</mark>\r\n");
      out.write("          </h2>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"col-lg-8 col-md-10 col-sm-12\">\r\n");
      out.write("          <div class=\"row align-self-center mb-2\">\r\n");
      out.write("            <div class=\"col-md-2 text-start\">\r\n");
      out.write("              <button type=\"button\" id=\"btn-mv-register\" class=\"btn btn-outline-primary btn-sm\">\r\n");
      out.write("                글쓰기\r\n");
      out.write("              </button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"col-md-7 offset-3\">\r\n");
      out.write("              <form class=\"d-flex\">\r\n");
      out.write("                <select\r\n");
      out.write("                  id=\"key\"\r\n");
      out.write("                  class=\"form-select form-select-sm ms-5 me-1 w-50\"\r\n");
      out.write("                  aria-label=\"검색조건\"\r\n");
      out.write("                >\r\n");
      out.write("                  <option selected>검색조건</option>\r\n");
      out.write("                  <option value=\"articleno\">글번호</option>\r\n");
      out.write("                  <option value=\"subject\">제목</option>\r\n");
      out.write("                  <option value=\"userid\">작성자</option>\r\n");
      out.write("                </select>\r\n");
      out.write("                <div class=\"input-group input-group-sm\">\r\n");
      out.write("                  <input type=\"text\" class=\"form-control\" placeholder=\"검색어...\" />\r\n");
      out.write("                  <button class=\"btn btn-dark\" type=\"button\">검색</button>\r\n");
      out.write("                </div>\r\n");
      out.write("              </form>\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <table class=\"table table-hover\">\r\n");
      out.write("            <thead>\r\n");
      out.write("              <tr class=\"text-center\">\r\n");
      out.write("                <th scope=\"col\">글번호</th>\r\n");
      out.write("                <th scope=\"col\">제목</th>\r\n");
      out.write("                <th scope=\"col\">작성자</th>\r\n");
      out.write("                <th scope=\"col\">조회수</th>\r\n");
      out.write("                <th scope=\"col\">작성일</th>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </thead>\r\n");
      out.write("            <tbody>\r\n");

for(BoardDto boardDto : list) {

      out.write("           \r\n");
      out.write("              <tr class=\"text-center\">\r\n");
      out.write("                <th scope=\"row\">");
      out.print( boardDto.getArticleNo() );
      out.write("</th>\r\n");
      out.write("                <td class=\"text-start\">\r\n");
      out.write("                  <a\r\n");
      out.write("                    href=\"#\"\r\n");
      out.write("                    class=\"article-title link-dark\"\r\n");
      out.write("                    data-no=\"");
      out.print( boardDto.getArticleNo() );
      out.write("\"\r\n");
      out.write("                    style=\"text-decoration: none\"\r\n");
      out.write("                  >\r\n");
      out.write("                    ");
      out.print( boardDto.getSubject() );
      out.write("\r\n");
      out.write("                  </a>\r\n");
      out.write("                </td>\r\n");
      out.write("                <td>");
      out.print( boardDto.getUserId() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( boardDto.getHit() );
      out.write("</td>\r\n");
      out.write("                <td>");
      out.print( boardDto.getRegisterTime() );
      out.write("</td>\r\n");
      out.write("              </tr>\r\n");

}

      out.write("              \r\n");
      out.write("            </tbody>\r\n");
      out.write("          </table>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("          <ul class=\"pagination justify-content-center\">\r\n");
      out.write("            <li class=\"page-item\">\r\n");
      out.write("              <a class=\"page-link\" href=\"#\">이전</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n");
      out.write("            <li class=\"page-item active\">\r\n");
      out.write("              <a class=\"page-link\" href=\"#\">2</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">4</a></li>\r\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">5</a></li>\r\n");
      out.write("            <li class=\"page-item\"><a class=\"page-link\" href=\"#\">다음</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script\r\n");
      out.write("      src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("      integrity=\"sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    ></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      let titles = document.querySelectorAll(\".article-title\");\r\n");
      out.write("      titles.forEach(function (title) {\r\n");
      out.write("        title.addEventListener(\"click\", function () {\r\n");
      out.write("          console.log(this.getAttribute(\"data-no\"));\r\n");
      out.write("          location.href = \"");
      out.print( root );
      out.write("/board/view.jsp?articleno=\" + this.getAttribute(\"data-no\");\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("\r\n");
      out.write("      document.querySelector(\"#btn-mv-register\").addEventListener(\"click\", function () {\r\n");
      out.write("        location.href = \"");
      out.print( root );
      out.write("/board/write.jsp\";\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
